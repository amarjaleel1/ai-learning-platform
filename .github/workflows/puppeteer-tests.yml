name: Run Puppeteer Tests

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 1
        submodules: false
    
    - name: Check for lock file
      id: check-lock
      run: |
        if [ -f "package-lock.json" ] || [ -f "npm-shrinkwrap.json" ] || [ -f "yarn.lock" ]; then
          echo "lockfile=true" >> $GITHUB_OUTPUT
          echo "Lock file found"
        else
          echo "lockfile=false" >> $GITHUB_OUTPUT
          echo "No lock file found"
        fi
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        # Disable cache completely to avoid the error
        cache: false
    
    # Separate cache step that only runs if we have a lock file
    - name: Cache npm dependencies
      if: steps.check-lock.outputs.lockfile == 'true'
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/yarn.lock', '**/npm-shrinkwrap.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Generate lock file if needed
      run: |
        if [ ! -f package-lock.json ] && [ -f package.json ]; then
          echo "No package-lock.json found, generating one..."
          npm install --package-lock-only
          echo "Lock file generated"
        fi
    
    - name: Install dependencies
      run: |
        echo "Installing dependencies..."
        npm install
    
    - name: Start server in background
      run: |
        echo "Starting server..."
        npm start &
        echo "Waiting for server to be ready..."
        sleep 10 # Give the server more time to start
    
    - name: Run browser tests
      run: |
        echo "Running browser tests..."
        npm run test:browser
    
    - name: Run accessibility tests
      run: |
        echo "Running accessibility tests..."
        npm run test:accessibility
      
    - name: Check if server is running
      run: |
        echo "Checking server status..."
        curl -s http://localhost:3000 > /dev/null
        if [ $? -ne 0 ]; then
          echo "Server is not running"
          exit 1
        else
          echo "Server is running properly"
        fi

    - name: Upload logs on failure
      if: ${{ failure() }}
      uses: actions/upload-artifact@v4
      with:
        name: server-logs
        path: |
          logs/
          npm-debug.log*
        retention-days: 5
